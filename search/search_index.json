{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MODAS - Multi-Omics Data Association Study toolkit MODAS (Multi-Omics Data Association Study toolkit) is an efficient software for high-dimensional omics data association analysis, featuring five main characteristics. MODAS employs a novel whole-genome association study (GWAS) strategy to handle high-dimensional omics data. Specifically, MODAS generates pseudo-genotype files to reduce the dimensionality of the original SNP-based genotype data. It then performs block-based GWAS to identify significantly associated genomic regions (SAGR), and finally conducts SNP-based association analysis on the SAGR to obtain QTLs for high-dimensional omics data. MODAS introduces Mendelian randomization algorithms to infer genetic regulatory relationships between molecular QTLs and phenotypic traits. This method helps to establish biological hypotheses and uncover potential genetic mechanisms. MODAS uses contrastive PCA algorithm to uncover differential components in population omics data between different conditions. This functionality is particularly useful for identifying agronomically important genes involved in condition comparisons, such as genes related to crop stress tolerance. MODAS employs an image matching algorithm to integrate multi-omics molecular QTLs, aiding in the elucidation of the genetic mechanisms underlying complex traits. MODAS provides an HTML-based web interface for visualizing and querying GWAS results from omics data, facilitating further gene function exploration. Download link : https://github.com/liusy-jz/MODAS Demo data link : https://github.com/liusy-jz/MODAS_data Demo data link2 : https://zenodo.org/doi/10.5281/zenodo.11951520 Cite : Liu, S.Y., Xu, F., Xu, Y.T., Wang, Q., Yan, J., Wang, J.Y., Wang, X.B., and Wang, X.F. (2022). MODAS: exploring maize germplasm with multi-omics data association studies. Sci. Bull. 67, 903-906. Contant us : modas_bio@163.com Note : Academic users can download directly, industrial users first contact us.","title":"Home"},{"location":"#modas-multi-omics-data-association-study-toolkit","text":"MODAS (Multi-Omics Data Association Study toolkit) is an efficient software for high-dimensional omics data association analysis, featuring five main characteristics. MODAS employs a novel whole-genome association study (GWAS) strategy to handle high-dimensional omics data. Specifically, MODAS generates pseudo-genotype files to reduce the dimensionality of the original SNP-based genotype data. It then performs block-based GWAS to identify significantly associated genomic regions (SAGR), and finally conducts SNP-based association analysis on the SAGR to obtain QTLs for high-dimensional omics data. MODAS introduces Mendelian randomization algorithms to infer genetic regulatory relationships between molecular QTLs and phenotypic traits. This method helps to establish biological hypotheses and uncover potential genetic mechanisms. MODAS uses contrastive PCA algorithm to uncover differential components in population omics data between different conditions. This functionality is particularly useful for identifying agronomically important genes involved in condition comparisons, such as genes related to crop stress tolerance. MODAS employs an image matching algorithm to integrate multi-omics molecular QTLs, aiding in the elucidation of the genetic mechanisms underlying complex traits. MODAS provides an HTML-based web interface for visualizing and querying GWAS results from omics data, facilitating further gene function exploration. Download link : https://github.com/liusy-jz/MODAS Demo data link : https://github.com/liusy-jz/MODAS_data Demo data link2 : https://zenodo.org/doi/10.5281/zenodo.11951520 Cite : Liu, S.Y., Xu, F., Xu, Y.T., Wang, Q., Yan, J., Wang, J.Y., Wang, X.B., and Wang, X.F. (2022). MODAS: exploring maize germplasm with multi-omics data association studies. Sci. Bull. 67, 903-906. Contant us : modas_bio@163.com Note : Academic users can download directly, industrial users first contact us.","title":"MODAS - Multi-Omics Data Association Study toolkit"},{"location":"installation/","text":"Installation MODAS is developed using Python3 language. The installation can be done with the following command. Install via pip #Depends: R(>=3.6), python(>=3.8) pip install MODAS Installation using conda conda create -n modas python=3.8 -y conda install -y -c conda-forge r-rcppeigen r=3.6 rpy2 $CONDA_PREFIX/bin/pip install MODAS","title":"Installation"},{"location":"installation/#installation","text":"MODAS is developed using Python3 language. The installation can be done with the following command.","title":"Installation"},{"location":"installation/#install-via-pip","text":"#Depends: R(>=3.6), python(>=3.8) pip install MODAS","title":"Install via pip"},{"location":"installation/#installation-using-conda","text":"conda create -n modas python=3.8 -y conda install -y -c conda-forge r-rcppeigen r=3.6 rpy2 $CONDA_PREFIX/bin/pip install MODAS","title":"Installation using conda"},{"location":"modas_for_windows_mac/","text":"MODAS for Windows/Mac MODAS runs through Docker in Windows/Mac. Users who do not have Docker installed in the system should first install Docker according to the Docker installation steps in the installation tutorial, and then install MODAS according to the MODAS installation steps. If Docker is already installed in the system, directly refer to the installation steps of MODAS to install MODAS. Docker installation For Windows Go to the https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi and download Linux kernel update package file. Then, double-click on the wsl_update_x64.msi to run the installer. Go to the website https://docs.docker.com/docker-for-windows/install/ and download the docker file. Note: A 64-bit processor and 4GB system RAM are the hardware prerequisites required to successfully run Docker on Windows 10. Then, double-click on the Docker Desktop Installer.exe to run the installer. After completion of the installation process, click Close. For Mac Please refer https://docs.docker.com/desktop/mac/install/. MODAS installation For Windows Press Windows+R to open \u201cRun\u201d box. Type \u201ccmd\u201d and then click \u201cOK\u201d to open a regular Command Prompt. Then, pull MODAS Image from Docker docker pull ibreeding/modas:v1 After pull command is finished, MODAS is installed successfully. For Mac Open the terminal by Spotlight, Applications or Finder. Then, pull MODAS Image from Docker docker pull ibreeding/modas:v1 After pull command is finished, MODAS is installed successfully. A toy try MODAS is a command line-based tool. When using it, user must first open terminals. In Windows, open it through Windows+R and type cmd. In Mac, open it through Spotlight, Applications or Finder. Note: Running MODAS in Windows/Mac relies on Docker. Make sure that Docker is running when using it. Running MODAS Image #For Windows, set /usr/data as working directory by -w, # mount directory D:/example to /usr/data by -v docker run -w /usr/data -v D:/example:/usr/data -t -d ibreading/modas:v1 /bin/bash #For Mac, set /usr/data as working directory by -w, mount directory /Users/macOS_user_account/example to /usr/data by -v docker run -w /usr/data -v /Users/macOS_user_account/example/example:/usr/data -t -d ibreading/modas:v1 /bin/bash The -w parameter is used to set the working directory of MODAS, and the -v parameter is used to mount the directory of Windows/Mac to the working directory of MODAS, and is used to generate the running result of MODAS in the directory of Windows/Mac. After running successfully, MODAS Image will run in the system in the form of a container, through the command docker ps -a record the container_id of MODAS Image ibreeding/modas:v1 for the execution of MODAS. Generate pseudo-genotype files docker exec container_id MODAS.py genoidx -g /root/MODAS_data/example_data/example_geno -genome_cluster -o example_geno Pseudo-genotype files generated by genoidx subcommand will be saved as example_geno.genome_cluster.csv . Prescreen candidate genomic regions for omics data The prescreen subcommand uses genome-wide genotype files to calculate the kinship matrix, first extract genotype files by: docker exec container_id tar -xvf /root/MODAS_data/genotype/chr_HAMP_genotype.tar.gz Then, the pseudo-genotype file example_geno.genome_cluster.csv generated by genoidx and the example_phe.csv file under the example_data folder are used for prescreen analysis, docker exec container_id MODAS.py prescreen -g /usr/data/chr_HAMP -genome_cluster /usr/data/example_geno.genome_cluster.csv -phe /root/MODAS_data/example_data/example.phe.csv -o example Prescreen subcommand generates two files including example.sig_omics_phe.csv containing phenotype data and example.phe_sig_qtl.csv containing candidate genomic regions of phenotype. Perform regional association analysis to identify QTLs The prescreen subcommand outputs are used for regional association analysis, docker exec container_id MODAS.py regiongwas -g /usr/data/chr_HAMP -phe /usr/data/example.sig_omics_phe.csv -phe_sig_qtl /usr/data/example.phe_sig_qtl.csv -o example Regiongwas subcommand generates two QTL files including example.region_gwas_qtl_res.csv containing reliable QTL results and example.region_gwas_bad_qtl_res.csv containing unreliable QTL results. Perform Mendelian randomization analysis docker exec container_id MODAS.py mr -g /usr/data/chr_HAMP -exposure /root/MODAS_data/example_data/example.exp.csv -outcome /root/MODAS_data/agronomic_traits/blup_traits_final.new.csv -qtl /root/MODAS_data/example_data/example_qtl_res.csv -mlm -o example The results of Mendelian randomization analysis are saved as example.MR.csv . MR-based network analysis MR-based network analysis is carried out by the parameter net of mr subcommand. It uses transcriptome data for subnetwork modules analysis, docker exec container_id MODAS.py mr -g /usr/data/chr_HAMP -exposure /root/MODAS_data/example_data/network_example.exp.csv -outcome /root/MODAS_data/example_data/network_example.exp.csv -qtl /root/MODAS_data/example_data/network_example_qtl.csv -mlm -net -o network_example Network analysis generated four files, including network_example.MR.csv containing gene pairs with MR effect, network_example.edgelist containing gene pairs with weight, network_example.cluster_one.result.csv containing all identified subnetwork modules, network_example.sig.cluster_one.result.csv containing significant subnetwork modules.","title":"MODAS for Windows/Mac"},{"location":"modas_for_windows_mac/#modas-for-windowsmac","text":"MODAS runs through Docker in Windows/Mac. Users who do not have Docker installed in the system should first install Docker according to the Docker installation steps in the installation tutorial, and then install MODAS according to the MODAS installation steps. If Docker is already installed in the system, directly refer to the installation steps of MODAS to install MODAS.","title":"MODAS for Windows/Mac"},{"location":"modas_for_windows_mac/#docker-installation","text":"","title":"Docker installation"},{"location":"modas_for_windows_mac/#for-windows","text":"Go to the https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi and download Linux kernel update package file. Then, double-click on the wsl_update_x64.msi to run the installer. Go to the website https://docs.docker.com/docker-for-windows/install/ and download the docker file. Note: A 64-bit processor and 4GB system RAM are the hardware prerequisites required to successfully run Docker on Windows 10. Then, double-click on the Docker Desktop Installer.exe to run the installer. After completion of the installation process, click Close.","title":"For Windows"},{"location":"modas_for_windows_mac/#for-mac","text":"Please refer https://docs.docker.com/desktop/mac/install/.","title":"For Mac"},{"location":"modas_for_windows_mac/#modas-installation","text":"","title":"MODAS installation"},{"location":"modas_for_windows_mac/#for-windows_1","text":"Press Windows+R to open \u201cRun\u201d box. Type \u201ccmd\u201d and then click \u201cOK\u201d to open a regular Command Prompt. Then, pull MODAS Image from Docker docker pull ibreeding/modas:v1 After pull command is finished, MODAS is installed successfully.","title":"For Windows"},{"location":"modas_for_windows_mac/#for-mac_1","text":"Open the terminal by Spotlight, Applications or Finder. Then, pull MODAS Image from Docker docker pull ibreeding/modas:v1 After pull command is finished, MODAS is installed successfully.","title":"For Mac"},{"location":"modas_for_windows_mac/#a-toy-try","text":"MODAS is a command line-based tool. When using it, user must first open terminals. In Windows, open it through Windows+R and type cmd. In Mac, open it through Spotlight, Applications or Finder. Note: Running MODAS in Windows/Mac relies on Docker. Make sure that Docker is running when using it.","title":"A toy try"},{"location":"modas_for_windows_mac/#running-modas-image","text":"#For Windows, set /usr/data as working directory by -w, # mount directory D:/example to /usr/data by -v docker run -w /usr/data -v D:/example:/usr/data -t -d ibreading/modas:v1 /bin/bash #For Mac, set /usr/data as working directory by -w, mount directory /Users/macOS_user_account/example to /usr/data by -v docker run -w /usr/data -v /Users/macOS_user_account/example/example:/usr/data -t -d ibreading/modas:v1 /bin/bash The -w parameter is used to set the working directory of MODAS, and the -v parameter is used to mount the directory of Windows/Mac to the working directory of MODAS, and is used to generate the running result of MODAS in the directory of Windows/Mac. After running successfully, MODAS Image will run in the system in the form of a container, through the command docker ps -a record the container_id of MODAS Image ibreeding/modas:v1 for the execution of MODAS.","title":"Running MODAS Image"},{"location":"modas_for_windows_mac/#generate-pseudo-genotype-files","text":"docker exec container_id MODAS.py genoidx -g /root/MODAS_data/example_data/example_geno -genome_cluster -o example_geno Pseudo-genotype files generated by genoidx subcommand will be saved as example_geno.genome_cluster.csv .","title":"Generate pseudo-genotype files"},{"location":"modas_for_windows_mac/#prescreen-candidate-genomic-regions-for-omics-data","text":"The prescreen subcommand uses genome-wide genotype files to calculate the kinship matrix, first extract genotype files by: docker exec container_id tar -xvf /root/MODAS_data/genotype/chr_HAMP_genotype.tar.gz Then, the pseudo-genotype file example_geno.genome_cluster.csv generated by genoidx and the example_phe.csv file under the example_data folder are used for prescreen analysis, docker exec container_id MODAS.py prescreen -g /usr/data/chr_HAMP -genome_cluster /usr/data/example_geno.genome_cluster.csv -phe /root/MODAS_data/example_data/example.phe.csv -o example Prescreen subcommand generates two files including example.sig_omics_phe.csv containing phenotype data and example.phe_sig_qtl.csv containing candidate genomic regions of phenotype.","title":"Prescreen candidate genomic regions for omics data"},{"location":"modas_for_windows_mac/#perform-regional-association-analysis-to-identify-qtls","text":"The prescreen subcommand outputs are used for regional association analysis, docker exec container_id MODAS.py regiongwas -g /usr/data/chr_HAMP -phe /usr/data/example.sig_omics_phe.csv -phe_sig_qtl /usr/data/example.phe_sig_qtl.csv -o example Regiongwas subcommand generates two QTL files including example.region_gwas_qtl_res.csv containing reliable QTL results and example.region_gwas_bad_qtl_res.csv containing unreliable QTL results.","title":"Perform regional association analysis to identify QTLs"},{"location":"modas_for_windows_mac/#perform-mendelian-randomization-analysis","text":"docker exec container_id MODAS.py mr -g /usr/data/chr_HAMP -exposure /root/MODAS_data/example_data/example.exp.csv -outcome /root/MODAS_data/agronomic_traits/blup_traits_final.new.csv -qtl /root/MODAS_data/example_data/example_qtl_res.csv -mlm -o example The results of Mendelian randomization analysis are saved as example.MR.csv .","title":"Perform Mendelian randomization analysis"},{"location":"modas_for_windows_mac/#mr-based-network-analysis","text":"MR-based network analysis is carried out by the parameter net of mr subcommand. It uses transcriptome data for subnetwork modules analysis, docker exec container_id MODAS.py mr -g /usr/data/chr_HAMP -exposure /root/MODAS_data/example_data/network_example.exp.csv -outcome /root/MODAS_data/example_data/network_example.exp.csv -qtl /root/MODAS_data/example_data/network_example_qtl.csv -mlm -net -o network_example Network analysis generated four files, including network_example.MR.csv containing gene pairs with MR effect, network_example.edgelist containing gene pairs with weight, network_example.cluster_one.result.csv containing all identified subnetwork modules, network_example.sig.cluster_one.result.csv containing significant subnetwork modules.","title":"MR-based network analysis"},{"location":"parameters/","text":"Parameters This chapter introduces the parameters of each module in detail. Genotype Dimensionality Reduction Module (genoidx) -g : Genotype file used for genome-wide genotype dimensionality reduction analysis, support plink bed format and hapmap format\uff0cthe plink bed format file only needs to provide the file prefix, the hapmap format needs to be used together with the parameter -convert -genome_cluster : Perform genome-wide genotype dimensionality reduction analysis on genotype file -w : Window size for genome-wide genotype dimensionality reduction analysis(bp), default 1000000 -s : Step size for genome-wide genotype dimensionality reduction analysis(bp), default 500000 -convert : Convert hapmap genotype format to plink bed format genotype -clump : Clumping analysis for genotype file, used to keep a subset of SNPs that are nearly uncorrelated with each other, thereby reducing the number of total SNPs to speed up genome-wide genotype dimensionality reduction analysis -p : Number of threads for genome cluster analysis,max threads is total number of genome chromosomes -o : The prefix of the output file, default MODAS_genoidx_output Phenotype preprocessing and transformation module (phenorm) -phe : Phenotype file for phenotype preprocessing and transformation, the file format is csv format, the first column and the first row are the names of inbred lines and phenotypes respectively -g : Genotype file in plink bed format for principal component analysis, used with the parameter -pca to correct differences in phenotype caused by population structure -pca : Correct the differences in phenotype caused by population structure through PCA -r : Phenotype missing ratio filter cutoff -v : Phenotype value filter cutoff -log2 : log2 transformation of phenotype -log10 : log10 transformation of phenotype -ln : ln transformation of phenotype -qqnorm : Normal quantile transformation of phenotype -norm : Boxcox transformation of phenotype -o : The prefix of the output file, default MODAS_phenorm_output Omics Phenotype Pre-screening Module (prescreen) -g : genotype file in plink bed format, used to calculate the kinship matrix for GWAS analysis -genome_cluster : pseudo-genotype file for phenotype pre-screening, generated by subcommand genoidx -phe : phenotype file for phenotype pre-screening analysis, the file format is csv format, the first column and the first row are the names of inbred lines and phenotypes respectively -lm_suggest_pvalue : linear model suggest pvalue for pseudo-SNP filter used for association analysis in mixed linear model, default 1/ pseudo-genotype file pseudo-snp number -lmm_suggest_pvalue : lmm suggest pvalue for phenotype prescreen, used to obtain candidate phenotypes with significant association analysis signals and significant association regions of phenotypes, default 1e-6 -p : number of threads for analysis in prescreen sub command -o : The prefix of the output file, default MODAS_prescreen_output Regional gwas identify QTL module (regiongwas) -g : Genotype file in plink bed format, used to calculate the kinship matrix for regional gwas analysis and extract snp in significant association regions of phenotypes -phe : Candidate phenotype file generated by subcommand prescreen -phe_sig_qtl : Significant association regions of candidate phenotypes file generated by subcommand prescreen -p1 : Significance threshold for index SNPs, used to determine the phenotype with QTL and index snps of phenotype -p2 : Secondary significance threshold for clumped SNPs, Used to obtain the secondary significant SNP linked to index snp to determine the reliability of the QTL. MODAS outputs the QTL containing 10 secondary significant SNPs as the phenotypic QTL result -cluster : Cluster phenotype by QTL -p : Number of threads for regional gwas analysis, default 1 -o : The prefix of the output file, default MODAS_regiongwas_out Mendelian randomization analysis module(mr) -g : Genotype file in plink bed format -exposure : Exposure phenotype file, such as mTrait phenotype, the file format is csv format, the first column and the first row are the names of inbred lines and phenotypes respectively -outcome : Outcome phenotype file, such as pTrait phenotype, the file format is csv format, the first column and the first row are the names of inbred lines and phenotypes respectively -qtl : Exposure phenotype QTL file, generated by subcommand regiongwas -lm : Perform Mendelian Randomization through linear model -mlm : Perform Mendelian Randomization through mixed linear model -p : Number of threads for Mendelian Randomization analysis -pvalue : The pvalue cutoff of Mendelian randomization analysis result output,default 1 -net : Mendelian Randomization network analysis, used to identify functional modules -o : The prefix of the output file, default MODAS_mr_out Whole genome-wide association analysis and visualization module(visual) -g : Genotype file in plink bed format for whole genome-wide association analysis -phe : phenotype file for GWAS analysis and visualization -qtl : phenotype QTL file generated by subcommand regiongwas -visual : Generate web-based GWAS visualization results -anno : gene annotation file for QTL annotation, used to display QTL information in visualized results -p : Number of threads genome-wide association analysis and visualization -o : The prefix of the output file,default MODAS_visual_out Construction of stress response index and identification of stress-responsive QTL(contrast) -stress_phe : omics dataset under stress treatment -control_phe : omics dataset under control treatment -alpha : Contrast strength for contrastive PCA, it represents the trade-off between having the high stress variance and the low control variance, default 1 -n_comp : Number of components for contrastive PCA, default 2 -beta_test_pvalue : Significance threshold for stress-responsive CPCA PC, used to determine the CPCA PC representing stress response effect of molecular features, default 1/number of CPCA PC for beta test -gwas : perform GWAS on stress response index to identify stress-responsive molecular QTL -g : Genotype file in plink bed format, used to perform GWAS on stress response index -genome_cluster : Pseudo-genotype file for phenotype pre-screening, generated by subcommand genoidx -anova_pvalue : Significance threshold of two-way ANOVA, used to determine stress-responsvie molecular QTL, default 0.05 -gwas_model : GWAS model for association analysis, supporting LM, GLM and MLM, default MLM -p : Number of threads for gwas analysis, default 1 -o : The prefix of the output file, default MODAS_contrast_out Co-localization analysis of QTLs for multiple traits(coloc) -qtl : molecular QTL file for co-localization analysis -g : Genotype file in plink bed format, used to extract genotype of SNPs associated with molecular features -gwas_dir : directory containing GWAS results for molecular features, used to extract SNPs associated with molecular features. It is recommended to use the association analysis results generated by the MODAS subcommand regiongwas -metric : metric for determining clustering patterns of kinship, it can be calinski_harabasz or silhouette, defualt calinski_harabasz -eps : The maximum distance between two traits used to consider a trait to co-localize with the other trait, defualt 0.2 -pvalue : Threshold of GWAS results for screening SNPs associated with molecular features, defualt 1e-6 -p : Number of threads for co-localization analysis, default 1 -o : The prefix of the output file, default MODAS_coloc_out","title":"Parameters"},{"location":"parameters/#parameters","text":"This chapter introduces the parameters of each module in detail.","title":"Parameters"},{"location":"parameters/#genotype-dimensionality-reduction-module-genoidx","text":"-g : Genotype file used for genome-wide genotype dimensionality reduction analysis, support plink bed format and hapmap format\uff0cthe plink bed format file only needs to provide the file prefix, the hapmap format needs to be used together with the parameter -convert -genome_cluster : Perform genome-wide genotype dimensionality reduction analysis on genotype file -w : Window size for genome-wide genotype dimensionality reduction analysis(bp), default 1000000 -s : Step size for genome-wide genotype dimensionality reduction analysis(bp), default 500000 -convert : Convert hapmap genotype format to plink bed format genotype -clump : Clumping analysis for genotype file, used to keep a subset of SNPs that are nearly uncorrelated with each other, thereby reducing the number of total SNPs to speed up genome-wide genotype dimensionality reduction analysis -p : Number of threads for genome cluster analysis,max threads is total number of genome chromosomes -o : The prefix of the output file, default MODAS_genoidx_output","title":"Genotype Dimensionality Reduction Module (genoidx)"},{"location":"parameters/#phenotype-preprocessing-and-transformation-module-phenorm","text":"-phe : Phenotype file for phenotype preprocessing and transformation, the file format is csv format, the first column and the first row are the names of inbred lines and phenotypes respectively -g : Genotype file in plink bed format for principal component analysis, used with the parameter -pca to correct differences in phenotype caused by population structure -pca : Correct the differences in phenotype caused by population structure through PCA -r : Phenotype missing ratio filter cutoff -v : Phenotype value filter cutoff -log2 : log2 transformation of phenotype -log10 : log10 transformation of phenotype -ln : ln transformation of phenotype -qqnorm : Normal quantile transformation of phenotype -norm : Boxcox transformation of phenotype -o : The prefix of the output file, default MODAS_phenorm_output","title":"Phenotype preprocessing and transformation module (phenorm)"},{"location":"parameters/#omics-phenotype-pre-screening-module-prescreen","text":"-g : genotype file in plink bed format, used to calculate the kinship matrix for GWAS analysis -genome_cluster : pseudo-genotype file for phenotype pre-screening, generated by subcommand genoidx -phe : phenotype file for phenotype pre-screening analysis, the file format is csv format, the first column and the first row are the names of inbred lines and phenotypes respectively -lm_suggest_pvalue : linear model suggest pvalue for pseudo-SNP filter used for association analysis in mixed linear model, default 1/ pseudo-genotype file pseudo-snp number -lmm_suggest_pvalue : lmm suggest pvalue for phenotype prescreen, used to obtain candidate phenotypes with significant association analysis signals and significant association regions of phenotypes, default 1e-6 -p : number of threads for analysis in prescreen sub command -o : The prefix of the output file, default MODAS_prescreen_output","title":"Omics Phenotype Pre-screening Module (prescreen)"},{"location":"parameters/#regional-gwas-identify-qtl-module-regiongwas","text":"-g : Genotype file in plink bed format, used to calculate the kinship matrix for regional gwas analysis and extract snp in significant association regions of phenotypes -phe : Candidate phenotype file generated by subcommand prescreen -phe_sig_qtl : Significant association regions of candidate phenotypes file generated by subcommand prescreen -p1 : Significance threshold for index SNPs, used to determine the phenotype with QTL and index snps of phenotype -p2 : Secondary significance threshold for clumped SNPs, Used to obtain the secondary significant SNP linked to index snp to determine the reliability of the QTL. MODAS outputs the QTL containing 10 secondary significant SNPs as the phenotypic QTL result -cluster : Cluster phenotype by QTL -p : Number of threads for regional gwas analysis, default 1 -o : The prefix of the output file, default MODAS_regiongwas_out","title":"Regional gwas identify QTL module (regiongwas)"},{"location":"parameters/#mendelian-randomization-analysis-modulemr","text":"-g : Genotype file in plink bed format -exposure : Exposure phenotype file, such as mTrait phenotype, the file format is csv format, the first column and the first row are the names of inbred lines and phenotypes respectively -outcome : Outcome phenotype file, such as pTrait phenotype, the file format is csv format, the first column and the first row are the names of inbred lines and phenotypes respectively -qtl : Exposure phenotype QTL file, generated by subcommand regiongwas -lm : Perform Mendelian Randomization through linear model -mlm : Perform Mendelian Randomization through mixed linear model -p : Number of threads for Mendelian Randomization analysis -pvalue : The pvalue cutoff of Mendelian randomization analysis result output,default 1 -net : Mendelian Randomization network analysis, used to identify functional modules -o : The prefix of the output file, default MODAS_mr_out","title":"Mendelian randomization analysis module(mr)"},{"location":"parameters/#whole-genome-wide-association-analysis-and-visualization-modulevisual","text":"-g : Genotype file in plink bed format for whole genome-wide association analysis -phe : phenotype file for GWAS analysis and visualization -qtl : phenotype QTL file generated by subcommand regiongwas -visual : Generate web-based GWAS visualization results -anno : gene annotation file for QTL annotation, used to display QTL information in visualized results -p : Number of threads genome-wide association analysis and visualization -o : The prefix of the output file,default MODAS_visual_out","title":"Whole genome-wide association analysis and visualization module(visual)"},{"location":"parameters/#construction-of-stress-response-index-and-identification-of-stress-responsive-qtlcontrast","text":"-stress_phe : omics dataset under stress treatment -control_phe : omics dataset under control treatment -alpha : Contrast strength for contrastive PCA, it represents the trade-off between having the high stress variance and the low control variance, default 1 -n_comp : Number of components for contrastive PCA, default 2 -beta_test_pvalue : Significance threshold for stress-responsive CPCA PC, used to determine the CPCA PC representing stress response effect of molecular features, default 1/number of CPCA PC for beta test -gwas : perform GWAS on stress response index to identify stress-responsive molecular QTL -g : Genotype file in plink bed format, used to perform GWAS on stress response index -genome_cluster : Pseudo-genotype file for phenotype pre-screening, generated by subcommand genoidx -anova_pvalue : Significance threshold of two-way ANOVA, used to determine stress-responsvie molecular QTL, default 0.05 -gwas_model : GWAS model for association analysis, supporting LM, GLM and MLM, default MLM -p : Number of threads for gwas analysis, default 1 -o : The prefix of the output file, default MODAS_contrast_out","title":"Construction of stress response index and identification of stress-responsive QTL(contrast)"},{"location":"parameters/#co-localization-analysis-of-qtls-for-multiple-traitscoloc","text":"-qtl : molecular QTL file for co-localization analysis -g : Genotype file in plink bed format, used to extract genotype of SNPs associated with molecular features -gwas_dir : directory containing GWAS results for molecular features, used to extract SNPs associated with molecular features. It is recommended to use the association analysis results generated by the MODAS subcommand regiongwas -metric : metric for determining clustering patterns of kinship, it can be calinski_harabasz or silhouette, defualt calinski_harabasz -eps : The maximum distance between two traits used to consider a trait to co-localize with the other trait, defualt 0.2 -pvalue : Threshold of GWAS results for screening SNPs associated with molecular features, defualt 1e-6 -p : Number of threads for co-localization analysis, default 1 -o : The prefix of the output file, default MODAS_coloc_out","title":"Co-localization analysis of QTLs for multiple traits(coloc)"},{"location":"quickstart/","text":"Quick Start The basic use of MODAS generally includes three steps: first, generate pseudo-genotype files; second, use the pseudo-genotype files to screen candidate genomic blocks; third, identify QTLs by SNP-based regional association analysis. In addition, Mendelian randomization (MR) analysis and GWAS visualization can also be performed for specified traits. In this part, only basic commands are listed and briefly described for a quick start, please refer to the tutorial part for a more detailed description of the implementation principle and parameters of MODAS. Input format Genotype format MODAS takes genotype files in plink-bed format as input, it also supports the conversion of hapmap format to plink-bed format. For usage, refer to the subcommand genoidx . Phenotype format MODAS takes omics phenotype files in csv format as input, the first column and the first row are the names of inbred lines and phenotypes respectively. New features in MODAS2 Identifying stress-responsive Molecular QTL through contrastive PCA and Two-Way ANOVA MODAS2 innovatively employs the contrastive PCA algorithm to separate the stress-response effects of natural variation on molecular traits from the genetic effects of natural variation on molecular traits. The separated stress response effects are then used as stress response indices for identifying stress-responsive molecular QTL. After identifying QTL using the stress response indices, the significance of the stress response for these QTL is further assessed through two-way ANOVA, resulting in the final stress-responsive molecular QTL. MODAS2 uses the subcommand contrast to identify stress-responsive molecular QTL. The command line is as follows: MODAS contrast -stress_phe example_data/test_salt.phe.csv -control_phe example_data/test_control.phe.csv -gwas -g example_data/example_geno.contrast -genome_cluster example_data/example_contrast.genome_cluster.csv -p 10 -o example contrast subcommand generates five files including example.scpca_pc.phe.csv , example.scpca_pc.beta_test.csv , example.scpca_pc.normalized_phe.csv , example.region_gwas_qtl_res.anova.csv , example.region_gwas_qtl_res.anova.sig.csv and example.region_gwas_bad_qtl_res.csv , which contain the stress response indices of molecular traits, statistical test results of the stress response indices, normalized stress response indices of molecular traits, stress response indices QTL results including two-way ANOVA P values, stress-responsive molecular QTL results and unreliable molecular QTL results, respectively. Multi-Trait QTL Colocalization Analysis Based on Image Matching Algorithms QTL colocalization analysis is an effective method for integrating functional information across different traits. However, existing methods rarely perform multi-trait QTL colocalization analysis. MODAS2 employs an image matching algorithm to score the colocalization degree between pairs of QTLs, and then uses clustering algorithms to quickly achieve multi-trait QTL colocalization analysis. Multi-trait QTL colocalization analysis can be performed using the coloc subcommand of MODAS2. The command line is as follows: MODAS coloc -qtl example_data/test_coloc.qtl.csv -g example_data/example_geno.contrast -gwas_dir example_data/gwas_coloc_test/ -p 6 -o example coloc subcommand generates three files including example.coloc_res.csv , example.coloc_pairwise.csv and example.dis_res.csv , which contain the results of the co-localized QTL clusters, the pairwise QTL co-localization results, and the similarity results between pairwise QTLs, respectively. Note : Sample data for MODAS2 can be downloaded via zenodo. Modules in MODAS Generate pseudo-genotype files The pseudo-genotype files can be generated from the -genome_cluster parameter in the subcommand genoidx . Since the genotype files are relatively large, -p is generally added to specify multi-threading to accelerate the generation of pseudo-genotype files. MODAS genoidx -g ./chr_HAMP -genome_cluster -p 10 -o chr_HAMP Prescreen candidate genomic regions for omics data Prescreening of candidate genomic regions for omics data/molecular traits (mTraits) is generated by the subcommand prescreen . In this step, the pseudo-genotype files are first used to perform association analysis on the mTraits through linear model (LM). Then, the significantly associated genomic regions (SAGRs) for each mTrait are re-analyzed through mixed linear model (MLM). Finally, the SAGRs pass the MLM screening are used as the candidate genomic regions. MODAS prescreen -g ./chr_HAMP -genome_cluster ./chr_HAMP.genome_cluster.csv -phe ./E3_log2.normalized_phe.csv -p 20 -o E3_log2 Perform regional association analysis to identify QTLs The QTL identification step is generated by the subcommand regiongwas . In this step, the SNPs from the candidate genomic regions are extracted to perform regional association analysis through MLM, and the QTLs for each mTrait are identified according to the results of SNP-based regional association analysis. MODAS regiongwas -g ./chr_HAMP -phe ./E3_log2.sig_omics_phe.csv -phe_sig_qtl ./E3_log2.phe_sig_qtl.csv -p 20 -o E3_log2 Perform Mendelian randomization analysis Mendelian randomization (MR) analysis is generated by the subcommand mr . In this step, the peak SNP of a QTL for each trait is used to infer the casual relationship between trait pairs. MR analysis in MODAS can be performed using either linear model (LM) or mixed linear model (MLM), with parameters -lm and -mlm , respectively. # lm model MODAS mr -g chr_HAMP -exposure AMP_kernel_transcriptome_v4_FPKM_correct.sig_eqtl.qqnorm.csv -outcome blup_traits_final.new.csv -qtl AMP_kernel_transcriptome_qtl_res.csv -lm -o AMP_kernel_transcriptome_MR_lm # mlm model MODAS mr -g chr_HAMP -exposure AMP_kernel_transcriptome_v4_FPKM_correct.sig_eqtl.qqnorm.csv -outcome blup_traits_final.new.csv -qtl AMP_kernel_transcriptome_qtl_res.csv -mlm -o AMP_kernel_transcriptome_MR_lm Whole genome-wide association analysis and visualization GWAS visualization is generated by the subcommand visual . In this step, MODAS uses specified QTL and trait files as inputs, to perform GWAS and generate whole-genome level Manhattan plots, and displays the results through a HTML based web page. # visualization MODAS visual -g chr_HAMP -phe E3_log2.normalized_phe.csv -qtl E3_log2.local_gwas_qtl_res.csv -p 6 -visual","title":"QuickStart"},{"location":"quickstart/#quick-start","text":"The basic use of MODAS generally includes three steps: first, generate pseudo-genotype files; second, use the pseudo-genotype files to screen candidate genomic blocks; third, identify QTLs by SNP-based regional association analysis. In addition, Mendelian randomization (MR) analysis and GWAS visualization can also be performed for specified traits. In this part, only basic commands are listed and briefly described for a quick start, please refer to the tutorial part for a more detailed description of the implementation principle and parameters of MODAS.","title":"Quick Start"},{"location":"quickstart/#input-format","text":"","title":"Input format"},{"location":"quickstart/#genotype-format","text":"MODAS takes genotype files in plink-bed format as input, it also supports the conversion of hapmap format to plink-bed format. For usage, refer to the subcommand genoidx .","title":"Genotype format"},{"location":"quickstart/#phenotype-format","text":"MODAS takes omics phenotype files in csv format as input, the first column and the first row are the names of inbred lines and phenotypes respectively.","title":"Phenotype format"},{"location":"quickstart/#new-features-in-modas2","text":"","title":"New features in MODAS2"},{"location":"quickstart/#identifying-stress-responsive-molecular-qtl-through-contrastive-pca-and-two-way-anova","text":"MODAS2 innovatively employs the contrastive PCA algorithm to separate the stress-response effects of natural variation on molecular traits from the genetic effects of natural variation on molecular traits. The separated stress response effects are then used as stress response indices for identifying stress-responsive molecular QTL. After identifying QTL using the stress response indices, the significance of the stress response for these QTL is further assessed through two-way ANOVA, resulting in the final stress-responsive molecular QTL. MODAS2 uses the subcommand contrast to identify stress-responsive molecular QTL. The command line is as follows: MODAS contrast -stress_phe example_data/test_salt.phe.csv -control_phe example_data/test_control.phe.csv -gwas -g example_data/example_geno.contrast -genome_cluster example_data/example_contrast.genome_cluster.csv -p 10 -o example contrast subcommand generates five files including example.scpca_pc.phe.csv , example.scpca_pc.beta_test.csv , example.scpca_pc.normalized_phe.csv , example.region_gwas_qtl_res.anova.csv , example.region_gwas_qtl_res.anova.sig.csv and example.region_gwas_bad_qtl_res.csv , which contain the stress response indices of molecular traits, statistical test results of the stress response indices, normalized stress response indices of molecular traits, stress response indices QTL results including two-way ANOVA P values, stress-responsive molecular QTL results and unreliable molecular QTL results, respectively.","title":"Identifying stress-responsive Molecular QTL through contrastive PCA and Two-Way ANOVA"},{"location":"quickstart/#multi-trait-qtl-colocalization-analysis-based-on-image-matching-algorithms","text":"QTL colocalization analysis is an effective method for integrating functional information across different traits. However, existing methods rarely perform multi-trait QTL colocalization analysis. MODAS2 employs an image matching algorithm to score the colocalization degree between pairs of QTLs, and then uses clustering algorithms to quickly achieve multi-trait QTL colocalization analysis. Multi-trait QTL colocalization analysis can be performed using the coloc subcommand of MODAS2. The command line is as follows: MODAS coloc -qtl example_data/test_coloc.qtl.csv -g example_data/example_geno.contrast -gwas_dir example_data/gwas_coloc_test/ -p 6 -o example coloc subcommand generates three files including example.coloc_res.csv , example.coloc_pairwise.csv and example.dis_res.csv , which contain the results of the co-localized QTL clusters, the pairwise QTL co-localization results, and the similarity results between pairwise QTLs, respectively. Note : Sample data for MODAS2 can be downloaded via zenodo.","title":"Multi-Trait QTL Colocalization Analysis Based on Image Matching Algorithms"},{"location":"quickstart/#modules-in-modas","text":"","title":"Modules in MODAS"},{"location":"quickstart/#generate-pseudo-genotype-files","text":"The pseudo-genotype files can be generated from the -genome_cluster parameter in the subcommand genoidx . Since the genotype files are relatively large, -p is generally added to specify multi-threading to accelerate the generation of pseudo-genotype files. MODAS genoidx -g ./chr_HAMP -genome_cluster -p 10 -o chr_HAMP","title":"Generate pseudo-genotype files"},{"location":"quickstart/#prescreen-candidate-genomic-regions-for-omics-data","text":"Prescreening of candidate genomic regions for omics data/molecular traits (mTraits) is generated by the subcommand prescreen . In this step, the pseudo-genotype files are first used to perform association analysis on the mTraits through linear model (LM). Then, the significantly associated genomic regions (SAGRs) for each mTrait are re-analyzed through mixed linear model (MLM). Finally, the SAGRs pass the MLM screening are used as the candidate genomic regions. MODAS prescreen -g ./chr_HAMP -genome_cluster ./chr_HAMP.genome_cluster.csv -phe ./E3_log2.normalized_phe.csv -p 20 -o E3_log2","title":"Prescreen candidate genomic regions for omics data"},{"location":"quickstart/#perform-regional-association-analysis-to-identify-qtls","text":"The QTL identification step is generated by the subcommand regiongwas . In this step, the SNPs from the candidate genomic regions are extracted to perform regional association analysis through MLM, and the QTLs for each mTrait are identified according to the results of SNP-based regional association analysis. MODAS regiongwas -g ./chr_HAMP -phe ./E3_log2.sig_omics_phe.csv -phe_sig_qtl ./E3_log2.phe_sig_qtl.csv -p 20 -o E3_log2","title":"Perform regional association analysis to identify QTLs"},{"location":"quickstart/#perform-mendelian-randomization-analysis","text":"Mendelian randomization (MR) analysis is generated by the subcommand mr . In this step, the peak SNP of a QTL for each trait is used to infer the casual relationship between trait pairs. MR analysis in MODAS can be performed using either linear model (LM) or mixed linear model (MLM), with parameters -lm and -mlm , respectively. # lm model MODAS mr -g chr_HAMP -exposure AMP_kernel_transcriptome_v4_FPKM_correct.sig_eqtl.qqnorm.csv -outcome blup_traits_final.new.csv -qtl AMP_kernel_transcriptome_qtl_res.csv -lm -o AMP_kernel_transcriptome_MR_lm # mlm model MODAS mr -g chr_HAMP -exposure AMP_kernel_transcriptome_v4_FPKM_correct.sig_eqtl.qqnorm.csv -outcome blup_traits_final.new.csv -qtl AMP_kernel_transcriptome_qtl_res.csv -mlm -o AMP_kernel_transcriptome_MR_lm","title":"Perform Mendelian randomization analysis"},{"location":"quickstart/#whole-genome-wide-association-analysis-and-visualization","text":"GWAS visualization is generated by the subcommand visual . In this step, MODAS uses specified QTL and trait files as inputs, to perform GWAS and generate whole-genome level Manhattan plots, and displays the results through a HTML based web page. # visualization MODAS visual -g chr_HAMP -phe E3_log2.normalized_phe.csv -qtl E3_log2.local_gwas_qtl_res.csv -p 6 -visual","title":"Whole genome-wide association analysis and visualization"},{"location":"tutorial/","text":"Tutorial In this chapter, the implementation of each module in MODAS will be introduced in detail, and several real-data results will also be shown in order to help users understand the principles of MODAS in depth. Moreover, a reference pipeline is also provided to help users analyze their own data. The datasets used in this part include a genotype data and a kernel metabolome data from a maize AMP population of 510 inbred lines. Genotype dimensionality reduction analysis Necessity and algorithms of genotype dimensionality reduction Genome-wide association analysis (GWAS) is a common method for identifying quantitative trait loci (QTL). With the rapid development of transcriptome, metabolomics and other high-throughput omics technologies, multi-omics data is gradually used as molecular traits (mTraits) for GWAS analysis. However, GWAS is generally used to analyze a small number of phenotypic traits. In terms of high-dimensional omics data molecular traits, conventional GWAS method is faced with such problems as large computational resource consumption, redundant data and difficult interpretation of analytical results. Generally, the high-dimensional molecular traits datasets include thousands of points, while the genotype datasets include millions of data points. Thus, a key step of association analysis for high-dimensional omics data is to reduce the dimensionality of the data. Due to linkage disequilibrium (LD), there are highly linked SNPs in a population's genotype file, which are highly redundant. We can use dimensionality reduction method to generate a pseudo-genotype file from the original SNP-based genotype file, which can dramatically reduce the dimensionality of genotype data, and improve the efficiency of GWAS to identifying QTLs quickly. In MODAS, Jaccard similarity coefficient, DBSCAN and PCA algorithms are jointly used for dimensionality reduction of SNP-base genotype data. In general, major allele accounts for a small proportion of heritability, while minor allele is more likely to be risk allele, therefore, the measurement of minor allele similarity can better reflect the functional similarity of SNP loci. In detail, given two SNP loci SNP1 and SNP2, use A to represent the number of minor alleles in all samples for SNP1, and use B to represent the number of minor alleles in all samples for SNP2, then, the ratio of the intersection size of A to B to the size of the union of A and B is defined as Jaccard similarity coefficient J(A,B). The larger J(A,B) value is, the higher the sample similarity is, when both A and B are empty, J(A,B) is defined as zero. Since DBSCAN is a density-based clustering algorithm, it defines the largest set of densely-connected points as clusters, clustering patterns of arbitrary shapes can be found in high-noise spaces. Compared with distance-based clustering algorithms such as K-means, DBSCAN does not need to know the number of clusters in advance, and can find clusters of any shape, as well as remove noise points. While compared with linkage disequilibrium based haplotype and tag SNP method, DBSCAN as a kind of non-supervised machine learning method, can better persist the genotype characteristic of genomic blocks, does not rely on biological parameters and has speed advantage. In addition, as a commonly used linear dimension reduction method, PCA has advantages in speed and accuracy. Thus, to sum up the advantages of these algorithms, Jaccard similarity coefficient distance matrix of minor alleles is used as the input of DBSCAN cluster algorithm to generate genomic blocks, and PCA is used for extract pseudo-genotypes from genomic blocks. Feasibility of genotype dimensionality reduction Here, we take a known QTL of metabolite DFP (Wen et al.) as an example to exhibit the feasibility of performing association analysis using pseudo-genotypes generated by dimensionality reduction as input. First, we performed SNP-based GWAS on DFP and get a QTL region between 142MB and 143.5MB on chromosome 1. The Manhattan plot is as follow: Then, we extracted the SNPs in this genomic region, and calculated the similarity coefficients of pairwise SNPs in the region through the Jaccard similarity coefficient, and then clustered the SNPs in the region through DBSCAN algorithm. The clustering result is as follow: It can be seen from the figure that there are mainly 4 highly linked blocks in the QTL of DFP. Among them, block3 is significantly related to the content of DFP. Principal component analysis of block3 shows that the first principal component of block3 can represent the genotype difference of all SNPs in block3. Therefore, it is feasible to perform dimensionality reduction analysis on the SNP-based genotypes to generate pseudo-genotypes for association analysis. The SNP-based genotype difference of block3 and the first principal component difference after dimensionality reduction are shown in the figure below. Generate genome wide pseudo-genotype files PCA as a dimensionality reduction method for genome-wide genotype data has been widely used in population structure analysis, but it can only reflect the genetic difference on the whole genome level, while the principle of QTL identification is based on specific genomic region difference among individuals in a population. However, segmentation of the whole genome may lead a result that same linkage genomic regions be assigned to different windows, which would reduce the power of association analysis. In order to prevent this situation, a sliding window method is implemented in MODAS to perform dimensionality reduction analysis on the whole genome scale. The parameter for generating genome-wide pseudo-genotype files is -genome_cluster, the parameter for setting the window size is -w, with the default value 1Mb, and the parameter for setting the step size is -s, with the default value 0.5Mb. The command line is as follows: # default window and step MODAS genoidx -g ./chr_HAMP -genome_cluster -p 10 -o chr_HAMP # set window 2MB MODAS genoidx -g ./chr_HAMP -genome_cluster -w 2000000 -p 10 -o chr_HAMP # set window 2MB step 1MB MODAS genoidx -g ./chr_HAMP -genome_cluster -w 2000000 -s 1000000 -p 10 -o chr_HAMP In the above command lines, -p specifies the number of chromosomes for dimensionality reduction analysis simultaneously, and the maximum is the number of chromosomes in the dimensionality reduction analysis; -g specifies the plink-bed format genotype file for dimensionality reduction analysis; -o specifies the prefix of the output file. The suffix of the generated output pseudo-genotype files are genome_cluster.csv . Convert hapmap format to plink-bed format The input genotype file of MODAS is plink-bed format. Since the hapmap format is also commonly used, MODAS implements a function of converting the hapmap format to plink-bed format. This can be called by the parameter -convert . The command line is as follows: # convert hapmap genotype file to plink bed genotype file MODAS genoidx -g ./chr_HAMP.hap -convert -o ./chr_HAMP # convert hamap genotype file and generate pseudo-genotype file MODAS genoidx -g ./chr_HAMP.hap -convert -genome_cluster -p 10 -o ./chr_HAMP Generate pseudo-genotype files for a large number of SNPs (~10 million) When generating pseudo-genotype files for a particularly large number of SNPs (~10 million), it would be very slow. In order to solve this problem, MODAS introduces clumping analysis to retain SNPs that are almost unrelated to each other. In this way, it can not only reduce the size of the genotype file, but also retain the diversity of the population without affecting the subsequent association analysis. This SNP clumping analysis can be called by the parameter -clump . The command line is as follows: # clumping analysis MODAS genoidx -g ./chr_HAMP -clump -o ./chr_HAMP # clumping analysis and generate pseudo-genotype file MODAS genoidx -g ./chr_HAMP -clump -genome_cluster -p 10 -o ./chr_HAMP The clumping analysis will generate genotype files in plink-bed format with suffixes _clump.bed , _clump.bim , and _clump.fam . Phenotype preprocessing and transformation Filter the phenotype data Phenotype data with high missing rates and low values may reduce the accuracy of association analysis. Two parameters -r and -v can be used to filter the phenotype data based on missing rates and phenotype values, respectively. MODAS considers both NA and 0 to be missing data when calculates missing rates. MODAS filters phenotype values by this criterion: the phenotype whose average value is higher than the threshold is retained, while the phenotype value below this threshold is dropped. The command line is as follows: # filter missing rate 0.5 MODAS phenorm -phe phe_data.csv -r 0.5 -o phe_data # filter value lower than 1 MODAS phenorm -phe phe_data.csv -v 1 -o phe_data # filter missing rate 0.5 and value lower than 1 MODAS phenorm -phe phe_data.csv -r 0.5 -v 1 -o phe_data Transform the phenotype data Omics data generally differ by orders of magnitude, which would lead to inaccurate association analysis results. MODAS supports logarithmization and normalization of the phenotype data to reduce the order of magnitude differences. Different degrees of logarithmization can be performed by calling the parameters -log2 , -ln , and -log10 . The box-cox method can be used to normalize the phenotype data by calling the parameter -norm . The command line is as follows: # log2 transformation MODAS phenorm -phe phe_data.csv -log2 -o phe_data # normal distribution transformation MODAS phenorm -phe phe_data.csv -norm -o phe_data The suffix of the generated normalized phenotype data file is normalized_phe.csv . Prescreen candidate genomic regions This step can be accomplished by the subcommand prescreen in MODAS. Two files with suffixes phe_sig_qtl.csv and sig_omics_phe.csv will be generated, corresponding to the candidate genomic regions and candidate molecular traits, respectively. The prescreen step also need a kinship matrix as input which can be calculated automatically based on the SNP-based genotype file, which is specified by the parameter -g . The -lm_suggest_pvalue parameter is used to specify the significance threshold of the linear model, the -lmm_suggest_pvalue parameter specifies the significance threshold of the mixed linear model, and the -genome_cluster parameter specifies the pseudo-genotype files. The command line is as follows: # prescreening candidate QTLs with default parameters MODAS prescreen -g ./chr_HAMP -genome_cluster ./chr_HAMP.genome_cluster.csv -phe ./E3_log2.normalized_phe.csv -o E3_log2 # perscreening candidate QTLs with 20 threads, specifies by -p MODAS prescreen -g ./chr_HAMP -genome_cluster ./chr_HAMP.genome_cluster.csv -phe ./E3_log2.normalized_phe.csv -p 20 -o E3_log2 # set lm significance threshold 1e-3, lmm significance threshold 1e-5 MODAS prescreen -g ./chr_HAMP -genome_cluster ./chr_HAMP.genome_cluster.csv -phe ./E3_log2.normalized_phe.csv -p 20 -lm_suggest_pvalue 1e-3 -lmm_suggest_pvalue 1e-5 -o E3_log2 Perform regional association analysis to identify QTLs Perform regional association analysis on candidate genomic regions Through the prescreen of pseudo-genotype files, the candidate genomic regions can be obtained, but the accurate boundaries of the QTLs still cannot be obtained. In order to accurately obtain the boundary for each QTL, MODAS performs SNP-based regional association analysis using MLM on these candidate genomic regions, and uses plink clumping analysis to merge the linked (R 2 =0.2) significant SNPs, to determine the precise boundaries or each QTL. Finally, a QTL with more than 10 SNPs is regarded as a reliable QTL. Since the SNPs in a QTL region cannot accurately reflect the genetic relationship of inbred lines, a kinship matrix is also needed through the parameter -g . The command line is as follows: # identify QTLs with default parameters MODAS regiongwas -g ./chr_HAMP -phe ./E3_log2.sig_omics_phe.csv -phe_sig_qtl ./E3_log2.phe_sig_qtl.csv -o E3_log2 # identify QTLs with 20 threads, specifies by -p MODAS regiongwas -g ./chr_HAMP -phe ./E3_log2.sig_omics_phe.csv -phe_sig_qtl ./E3_log2.phe_sig_qtl.csv -p 20 -o E3_log2 # identify QTLs with p1 = 1e-7 and p2 = 1e-6 MODAS regiongwas -g ./chr_HAMP -phe ./E3_log2.sig_omics_phe.csv -phe_sig_qtl ./E3_log2.phe_sig_qtl.csv -p1 1e-7 -p2 1e-6 -p 20 -o E3_log2 The -phe_sig_qtl parameter specifies the candidate genomic regions file, the -phe parameter specifies the candidate traits file, the -g parameter specifies the SNP-based genotype file, the -p1 parameter specifies the significance threshold of index SNPs, the -p2 parameter specifies the secondary significance threshold for clumped SNPs. The regiongwas subcommand generates two files with the suffixes local_gwas_qtl_res.csv and local_gwas_bad_qtl_res.csv , which deposit reliable QTLs and unreliable QTLs, respectively. The cumulative distribution of significantly associated QTLs/metabolites after regional association analysis is looks like this: Cluster the molecular traits In the results of regional association analysis, the QTLs identified by different traits were sometimes overlapped. Principal component analysis can be performed for the traits with overlapped QTLs, and the first principal component PC1 be used for GWAS analysis. As a result, the same QTL could be detected, which indicated that PC1 could replace the original multiple traits to reduce the amount of computing resource. In the process of regional association analysis in MODAS, the -cluster parameter can be added to cluster the traits according to the distance between QTL positions and further reduce the dimension of the molecular traits. In detail, the steps are as follows: First, when peak SNPs for two traits with a distance less than 2Mb, these traits are clustered. Second, principal component analysis is performed on the cluster and the correlation between the first principal component (PC1) and each trait are calculated. Third, when all traits have correlations greater than 0.6 with PC1 and the number of traits are greater than 2, these traits are clustered; whilst the remaining traits with correlations smaller than 0.6 are subjected to a new round a PCA; then, repeat the steps above until there is no trait remaining or no trait has a correlation greater than 0.6 with PC1, the remaining phenotypes are output separately. The -cluster parameter will generate two files with the suffixes phe_labeled.csv and clustered_phe.csv , which correspond to the cluster label of each traits and the reduced-dimensional traits, respectively. Perform Mendelian randomization analysis Mendelian Randomization analysis Mendelian Randomization (MR) has been successfully applied in human genetics to explain the casual relations among genetic mutations, intermediate phenotypes (e.g., hypertension, hyperlipidemia) and diseases (e.g., stroke, myocardial infarction), rather than only associations. MODAS uses two models for Mendelian randomization analysis. In linear model, z represents the most significantly associated SNP of mTrait detected in RA analysis, x represents the expression level of a mTrait, and y represents the pTrait. Then, a two-step least-squares (2SLS) estimate of the effect of x on y from an MR analysis is: where b zy and b zx are the least-squares estimates of z on y and x, respectively, and b xy is interpreted as the effect size of x on y free of confounding from non-genetic factors. The sampling variance of the 2SLS estimate is: where n is the sample size, is the proportion of variance in y explained by x, and is the proportion of variance in x explained by z. In mixed linear model, z represents the most significantly associated SNP of mTrait detected in RA analysis, b zy is the estimate of the most significantly associated SNP effect from mixed linear model for pTrait, var(b zy ) is the estimate of the most significantly associated SNP standard error from mixed linear model for pTrait, b zx is the estimate of the most significantly associated SNP effect from mixed linear model for mTrait, var(b zx ) is the estimate of the most significantly associated SNP standard error from mixed linear model for mTrait, The sampling variance of bxy can be calculated approximately as: Then, we could have a statistic: to test the statistical significance of b xy , where The MR analysis in MODAS can be called by the subcommand mr , using either linear model (LM) or mixed linear model (MLM), with parameters -lm and -mlm , respectively. The command line is as follows: # lm model MODAS mr -g chr_HAMP -exposure AMP_kernel_transcriptome_v4_FPKM_correct.sig_eqtl.qqnorm.csv -outcome blup_traits_final.new.csv -qtl AMP_kernel_transcriptome_qtl_res.csv -lm -o AMP_kernel_transcriptome_MR_lm # mlm model MODAS mr -g chr_HAMP -exposure AMP_kernel_transcriptome_v4_FPKM_correct.sig_eqtl.qqnorm.csv -outcome blup_traits_final.new.csv -qtl AMP_kernel_transcriptome_qtl_res.csv -mlm -o AMP_kernel_transcriptome_MR_lm MR-based network module identification To construct the modularized casualty network based on the casual relations, MODAS selects the gene pairs with MR effects passing the significance threshold of p value = 0.01. The edge between two connecting genes is represented by a coefficient transformed from the significance level based on the rule: , represents the weight of genei and genej, represents the number of gene pairs whose MR effect is less than the MR effect of genei and genej, represents the number of gene pairs that simultaneously satisfy that the gene pair is colocalized and the MR effect is less than the MR effect of genei and genej. The gene pair colocalization is determined by whether the distance between the gene pair peak snp is less than 1Mb, less than 1Mb indicates that the gene pair is co-localized, otherwise, it is not co-localized. Then, a table of the gene-gene casualty is generated by filter edge with <0.2, followed by applying ClusterONE to construct a modularized casualty network. ClusterONE (Clustering with Overlapping Neighborhood Expansion) is a graph clustering algorithm that has been employed in generating overlapping clusters in constructing protein-protein interaction networks. This algorithm is also applicable to modularize a gene casualty network, as one gene may participate in more than one regulatory pathway. The positive and negative influence of a gene on a trait may be reflected from the positive and negative values of the MR effect, respectively, which is computed between gene expression level and the phenotypic value of a trait. The MR-based network module identification can be called by the subcommand mr with parameter -net . The command line is as follows: # network analysis MODAS mr -g chr_HAMP -exposure AMP_kernel_transcriptome_v4_eqtl_sig.csv -outcome AMP_kernel_transcriptome_v4_eqtl_sig.csv -qtl chr_HAMP_kernel_eqtl_new.local_gwas_qtl_res.csv -mlm -p 21 -net -o chr_HAMP_kernel_eqtl_new.local_gwas_qtl_res Whole genome-wide association analysis and visualization Query and visualization of the regional association analysis results are not convenient, thus, a GWAS visualization module is implemented in MODAS. This module first performs GWAS and generate whole-genome level Manhattan plots for specified QTLs and traits, and then displays the results through a HTML based web page. The web page interface is divided into two areas: the left area is the navigation bar, and each label corresponds to a different QTL. Users can click on the drop-down button to list the traits of each QTL; the right area is the content page, and users can access the detailed information of each QTL or trait by clicking on the corresponding label in the left area. The GWAS visualization module in MODAS provides users with an efficient query scheme for a large number of GWAS results, it can be called by the subcommand -visual . The command line is as follows: # visualization MODAS visual -g chr_HAMP -phe E3_log2.normalized_phe.csv -qtl E3_log2.local_gwas_qtl_res.csv -p 6 -visual Identification of stress-responsive molecular QTLs Construction of stress-responsive indices by contrastive PCA Identification of stress response molecular traits involves comparing the phenotypic values of molecular traits under stress and control conditions. However, the phenotypic values of molecular traits do not directly reflect the differences in stress response between alleles. Therefore, it is necessary to transform the phenotypic values of molecular traits to reflect the impact of alleles on molecular traits, thereby accurately identifying the stress response effects of molecular traits. One effective metric is the Bray-Curtis distance, which measures differences in species composition between different plots based on species abundance. By treating genotypes as \"species,\" Bray-Curtis distance can be used to transform molecular traits, allowing the assessment of the effect of alleles on molecular traits. For example, with the gene ZmRH3 , which is related to abiotic stress, we used Bray-Curtis distance to transform its expression levels (results shown in the figure below). We found that the transformed molecular traits not only reflected the effect of alleles on molecular traits but also revealed the differences in stress response between alleles. The transformed molecular traits form a distance matrix, and extracting differences from the matrices under stress and control conditions is quite challenging. This involves feature extraction from two matrices and comparison of the differences between features. Contrast PCA is a novel PCA algorithm that can simultaneously process two datasets and automatically extract the most significant differences between them. We used contrast PCA to perform comparison and dimensionality reduction on the transformed molecular traits of the gene ZmRH3 . The results showed that in inbred lines with a contrast PCA principal component greater than 0, there was a difference in ZmRH3 expression levels between control and stress conditions; in inbred lines with a principal component less than 0, there was no significant difference in ZmRH3 expression levels between control and stress conditions. This indicates that contrast PCA can be used to extract stress response effects of molecular traits. MODAS extracts the stress response effects of molecular traits using the contrast subcommand. This subcommand specifies the omics data under stress and control conditions through the parameters -stress_phe and -control_phe , respectively. It then extracts the stress response effects of molecular traits through Bray-Curtis transformation and the contrast PCA algorithm. The command line is as follows: MODAS contrast -stress_phe test_salt.rna.phe.csv -control_phe test_control.rna.phe.csv -beta_test_pvalue 1 -o test Since contrast PCA does not provide statistical significance testing to help screen out insignificant stress response effects, MODAS offers a statistical test method for screening contrast PCA results. The significance threshold is specified through -beta_test_pvalue . The command line including the statistical test screening is as follows: MODAS contrast -stress_phe test_salt.rna.phe.csv -control_phe test_control.rna.phe.csv -beta_test_pvalue 1e-6 -o test The above command will generate files with the suffixes .scpca_pc.phe.csv and .scpca_pc.beta_test.csv , which contain the stress response indices of molecular traits and the statistical test results of the stress response indices, respectively. Note: It is worth noting that the contrast subcommand by default screens results using Bonferroni multiple hypothesis correction, with a threshold of 1/number of traits tested, and only the stress response effects that pass this threshold are considered as stress response indices. Identifying stress-responsive molecular QTLs The stress response index reflects the effects of molecular traits under stress conditions. Performing GWAS on the stress response index can identify molecular QTLs associated with stress response, thereby elucidating the regulatory mechanisms of crop stress tolerance. However, the large number of stress response indices poses a significant computational burden for the identification of molecular QTLs. To address this, we use the MODAS subcommands prescreen and regiongwas to analyze the stress response indices in the process of identifying molecular QTLs related to stress response. For convenience in simultaneously constructing stress response indices and identifying molecular QTLs, the MODAS subcommand contrast integrates the functionalities of the prescreen and regiongwas subcommands. When using the contrast subcommand to identify molecular QTLs, the parameters -g and -genome_cluster are required to specify the genotype file and the pseudo-genotype file for pre-screening the stress response indices for GWAS analysis. To analyze the significance of stress response molecular QTLs, we also perform a two-way ANOVA on the identified molecular QTLs. The -anova_pvalue parameter is used to filter the stress-responsive molecular QTLs, yielding the final results. The default threshold for the -anova_pvalue parameter is 0.05. The command line for identifying stress response molecular QTLs is as follows: MODAS contrast -stress_phe test_salt.rna.phe.csv -control_phe test_control.rna.phe.csv -g chr.TEMs_clump -genome_cluster ./chr.TEMs_clump.genome_cluster.csv -gwas -p 10 -anova_pvalue 0.05 -o test The above command will generate files with the suffixes .scpca_pc.phe.csv , .scpca_pc.beta_test.csv , .region_gwas_qtl_res.anova.csv , and .region_gwas_qtl_res.anova.sig.csv , which contain the stress response indices of molecular traits, the statistical test results of the stress response indices, the QTL results of the stress response indices including the p-values from the two-way ANOVA, and the QTL results of the stress response indices with significant ANOVA result, respectively. QTL co-localization analysis based on image matching algorithm QTL co-localization analysis is a method that integrates multiple phenotypic traits through natural variation, effectively merging various functional information to elucidate the genetic mechanisms of complex traits. However, relying solely on the overlap of QTL regions is insufficient to accurately determine QTL co-localization. The goal of co-localization is to ascertain whether QTLs share the same causal variation, which can be represented through a kinship matrix. To validate the use of kinship matrices in determining QTL co-localization, we analyzed the stress-responsive metabolite QTL of betaine (SRI1) and the stress-responsive expression QTL of its most relevant candidate gene, ZmGB1 . We found that the kinship matrices of both QTLs exhibited a consistent pattern, indicating that kinship matrices can be used to assess QTL co-localization. To accurately measure the similarity between two kinship matrices, we used an approximate image matching algorithm. To further evaluate the robustness of this method, we calculated the kinship matrix similarity between the stress-responsive metabolite QTL of betaine (SRI1) and 2666 stress-responsive expression QTLs using the approximate image matching algorithm. The results showed that ZmGB1 had the highest similarity with SRI1, demonstrating that the kinship matrix similarity measure based on the approximate image matching algorithm can be used for QTL co-localization analysis. MODAS performs QTL co-localization analysis based on the approximate image matching algorithm through the subcommand coloc . The command line is as follows: MODAS coloc -qtl multi_omics.bc_cspca_res.new.beta_test.sig.region_gwas_qtl_res.anova_sig.csv -g chr.TEMs_clump -gwas_dir gwas_test_new/ -p 8 -o test The parameter -qtl specifies the QTL file used for co-localization analysis, and -gwas_dir is used to specify the directory containing the association analysis results for each molecular trait. It is recommended to use the association analysis results generated by the MODAS subcommand regiongwas . The parameter -g specifies the genotype data used to calculate kinship, and -p specifies the threads used for co-localization analysis. The above command will generate files with the suffixes .coloc_res.csv , .coloc_pairwise.csv , and .dis_res.csv , which contain the results of the co-localized QTL clusters, the pairwise QTL co-localization results, and the similarity results between pairwise QTLs, respectively. \\(R_{xy}^2\\) \\(R_{zx}^2\\) \\(weight_{(i,j)}\\) \\(co-mapped{\\,}MR{\\,}gene{\\,}pair{\\,}count_{(P<P_{(i,j)})}\\) \\(MR{\\,}gene{\\,}pair{\\,}count_{(P<P_{(i,j)})}\\) \\(weight_{(i,j)}=\\frac {co-mapped{\\,}MR{\\,}gene{\\,}pair{\\,}count_{(P<P_{(i,j)})}}{MR{\\,}gene{\\,}pair{\\,}count_{(P<P_{(i,j)})}}\\)","title":"Tutorial"},{"location":"tutorial/#tutorial","text":"In this chapter, the implementation of each module in MODAS will be introduced in detail, and several real-data results will also be shown in order to help users understand the principles of MODAS in depth. Moreover, a reference pipeline is also provided to help users analyze their own data. The datasets used in this part include a genotype data and a kernel metabolome data from a maize AMP population of 510 inbred lines.","title":"Tutorial"},{"location":"tutorial/#genotype-dimensionality-reduction-analysis","text":"","title":"Genotype dimensionality reduction analysis"},{"location":"tutorial/#necessity-and-algorithms-of-genotype-dimensionality-reduction","text":"Genome-wide association analysis (GWAS) is a common method for identifying quantitative trait loci (QTL). With the rapid development of transcriptome, metabolomics and other high-throughput omics technologies, multi-omics data is gradually used as molecular traits (mTraits) for GWAS analysis. However, GWAS is generally used to analyze a small number of phenotypic traits. In terms of high-dimensional omics data molecular traits, conventional GWAS method is faced with such problems as large computational resource consumption, redundant data and difficult interpretation of analytical results. Generally, the high-dimensional molecular traits datasets include thousands of points, while the genotype datasets include millions of data points. Thus, a key step of association analysis for high-dimensional omics data is to reduce the dimensionality of the data. Due to linkage disequilibrium (LD), there are highly linked SNPs in a population's genotype file, which are highly redundant. We can use dimensionality reduction method to generate a pseudo-genotype file from the original SNP-based genotype file, which can dramatically reduce the dimensionality of genotype data, and improve the efficiency of GWAS to identifying QTLs quickly. In MODAS, Jaccard similarity coefficient, DBSCAN and PCA algorithms are jointly used for dimensionality reduction of SNP-base genotype data. In general, major allele accounts for a small proportion of heritability, while minor allele is more likely to be risk allele, therefore, the measurement of minor allele similarity can better reflect the functional similarity of SNP loci. In detail, given two SNP loci SNP1 and SNP2, use A to represent the number of minor alleles in all samples for SNP1, and use B to represent the number of minor alleles in all samples for SNP2, then, the ratio of the intersection size of A to B to the size of the union of A and B is defined as Jaccard similarity coefficient J(A,B). The larger J(A,B) value is, the higher the sample similarity is, when both A and B are empty, J(A,B) is defined as zero. Since DBSCAN is a density-based clustering algorithm, it defines the largest set of densely-connected points as clusters, clustering patterns of arbitrary shapes can be found in high-noise spaces. Compared with distance-based clustering algorithms such as K-means, DBSCAN does not need to know the number of clusters in advance, and can find clusters of any shape, as well as remove noise points. While compared with linkage disequilibrium based haplotype and tag SNP method, DBSCAN as a kind of non-supervised machine learning method, can better persist the genotype characteristic of genomic blocks, does not rely on biological parameters and has speed advantage. In addition, as a commonly used linear dimension reduction method, PCA has advantages in speed and accuracy. Thus, to sum up the advantages of these algorithms, Jaccard similarity coefficient distance matrix of minor alleles is used as the input of DBSCAN cluster algorithm to generate genomic blocks, and PCA is used for extract pseudo-genotypes from genomic blocks.","title":"Necessity and algorithms of genotype dimensionality reduction"},{"location":"tutorial/#feasibility-of-genotype-dimensionality-reduction","text":"Here, we take a known QTL of metabolite DFP (Wen et al.) as an example to exhibit the feasibility of performing association analysis using pseudo-genotypes generated by dimensionality reduction as input. First, we performed SNP-based GWAS on DFP and get a QTL region between 142MB and 143.5MB on chromosome 1. The Manhattan plot is as follow: Then, we extracted the SNPs in this genomic region, and calculated the similarity coefficients of pairwise SNPs in the region through the Jaccard similarity coefficient, and then clustered the SNPs in the region through DBSCAN algorithm. The clustering result is as follow: It can be seen from the figure that there are mainly 4 highly linked blocks in the QTL of DFP. Among them, block3 is significantly related to the content of DFP. Principal component analysis of block3 shows that the first principal component of block3 can represent the genotype difference of all SNPs in block3. Therefore, it is feasible to perform dimensionality reduction analysis on the SNP-based genotypes to generate pseudo-genotypes for association analysis. The SNP-based genotype difference of block3 and the first principal component difference after dimensionality reduction are shown in the figure below.","title":"Feasibility of genotype dimensionality reduction"},{"location":"tutorial/#generate-genome-wide-pseudo-genotype-files","text":"PCA as a dimensionality reduction method for genome-wide genotype data has been widely used in population structure analysis, but it can only reflect the genetic difference on the whole genome level, while the principle of QTL identification is based on specific genomic region difference among individuals in a population. However, segmentation of the whole genome may lead a result that same linkage genomic regions be assigned to different windows, which would reduce the power of association analysis. In order to prevent this situation, a sliding window method is implemented in MODAS to perform dimensionality reduction analysis on the whole genome scale. The parameter for generating genome-wide pseudo-genotype files is -genome_cluster, the parameter for setting the window size is -w, with the default value 1Mb, and the parameter for setting the step size is -s, with the default value 0.5Mb. The command line is as follows: # default window and step MODAS genoidx -g ./chr_HAMP -genome_cluster -p 10 -o chr_HAMP # set window 2MB MODAS genoidx -g ./chr_HAMP -genome_cluster -w 2000000 -p 10 -o chr_HAMP # set window 2MB step 1MB MODAS genoidx -g ./chr_HAMP -genome_cluster -w 2000000 -s 1000000 -p 10 -o chr_HAMP In the above command lines, -p specifies the number of chromosomes for dimensionality reduction analysis simultaneously, and the maximum is the number of chromosomes in the dimensionality reduction analysis; -g specifies the plink-bed format genotype file for dimensionality reduction analysis; -o specifies the prefix of the output file. The suffix of the generated output pseudo-genotype files are genome_cluster.csv .","title":"Generate genome wide pseudo-genotype files"},{"location":"tutorial/#convert-hapmap-format-to-plink-bed-format","text":"The input genotype file of MODAS is plink-bed format. Since the hapmap format is also commonly used, MODAS implements a function of converting the hapmap format to plink-bed format. This can be called by the parameter -convert . The command line is as follows: # convert hapmap genotype file to plink bed genotype file MODAS genoidx -g ./chr_HAMP.hap -convert -o ./chr_HAMP # convert hamap genotype file and generate pseudo-genotype file MODAS genoidx -g ./chr_HAMP.hap -convert -genome_cluster -p 10 -o ./chr_HAMP","title":"Convert hapmap format to plink-bed format"},{"location":"tutorial/#generate-pseudo-genotype-files-for-a-large-number-of-snps-10-million","text":"When generating pseudo-genotype files for a particularly large number of SNPs (~10 million), it would be very slow. In order to solve this problem, MODAS introduces clumping analysis to retain SNPs that are almost unrelated to each other. In this way, it can not only reduce the size of the genotype file, but also retain the diversity of the population without affecting the subsequent association analysis. This SNP clumping analysis can be called by the parameter -clump . The command line is as follows: # clumping analysis MODAS genoidx -g ./chr_HAMP -clump -o ./chr_HAMP # clumping analysis and generate pseudo-genotype file MODAS genoidx -g ./chr_HAMP -clump -genome_cluster -p 10 -o ./chr_HAMP The clumping analysis will generate genotype files in plink-bed format with suffixes _clump.bed , _clump.bim , and _clump.fam .","title":"Generate pseudo-genotype files for a large number of SNPs (~10 million)"},{"location":"tutorial/#phenotype-preprocessing-and-transformation","text":"","title":"Phenotype preprocessing and transformation"},{"location":"tutorial/#filter-the-phenotype-data","text":"Phenotype data with high missing rates and low values may reduce the accuracy of association analysis. Two parameters -r and -v can be used to filter the phenotype data based on missing rates and phenotype values, respectively. MODAS considers both NA and 0 to be missing data when calculates missing rates. MODAS filters phenotype values by this criterion: the phenotype whose average value is higher than the threshold is retained, while the phenotype value below this threshold is dropped. The command line is as follows: # filter missing rate 0.5 MODAS phenorm -phe phe_data.csv -r 0.5 -o phe_data # filter value lower than 1 MODAS phenorm -phe phe_data.csv -v 1 -o phe_data # filter missing rate 0.5 and value lower than 1 MODAS phenorm -phe phe_data.csv -r 0.5 -v 1 -o phe_data","title":"Filter the phenotype data"},{"location":"tutorial/#transform-the-phenotype-data","text":"Omics data generally differ by orders of magnitude, which would lead to inaccurate association analysis results. MODAS supports logarithmization and normalization of the phenotype data to reduce the order of magnitude differences. Different degrees of logarithmization can be performed by calling the parameters -log2 , -ln , and -log10 . The box-cox method can be used to normalize the phenotype data by calling the parameter -norm . The command line is as follows: # log2 transformation MODAS phenorm -phe phe_data.csv -log2 -o phe_data # normal distribution transformation MODAS phenorm -phe phe_data.csv -norm -o phe_data The suffix of the generated normalized phenotype data file is normalized_phe.csv .","title":"Transform the phenotype data"},{"location":"tutorial/#prescreen-candidate-genomic-regions","text":"This step can be accomplished by the subcommand prescreen in MODAS. Two files with suffixes phe_sig_qtl.csv and sig_omics_phe.csv will be generated, corresponding to the candidate genomic regions and candidate molecular traits, respectively. The prescreen step also need a kinship matrix as input which can be calculated automatically based on the SNP-based genotype file, which is specified by the parameter -g . The -lm_suggest_pvalue parameter is used to specify the significance threshold of the linear model, the -lmm_suggest_pvalue parameter specifies the significance threshold of the mixed linear model, and the -genome_cluster parameter specifies the pseudo-genotype files. The command line is as follows: # prescreening candidate QTLs with default parameters MODAS prescreen -g ./chr_HAMP -genome_cluster ./chr_HAMP.genome_cluster.csv -phe ./E3_log2.normalized_phe.csv -o E3_log2 # perscreening candidate QTLs with 20 threads, specifies by -p MODAS prescreen -g ./chr_HAMP -genome_cluster ./chr_HAMP.genome_cluster.csv -phe ./E3_log2.normalized_phe.csv -p 20 -o E3_log2 # set lm significance threshold 1e-3, lmm significance threshold 1e-5 MODAS prescreen -g ./chr_HAMP -genome_cluster ./chr_HAMP.genome_cluster.csv -phe ./E3_log2.normalized_phe.csv -p 20 -lm_suggest_pvalue 1e-3 -lmm_suggest_pvalue 1e-5 -o E3_log2","title":"Prescreen candidate genomic regions"},{"location":"tutorial/#perform-regional-association-analysis-to-identify-qtls","text":"","title":"Perform regional association analysis to identify QTLs"},{"location":"tutorial/#perform-regional-association-analysis-on-candidate-genomic-regions","text":"Through the prescreen of pseudo-genotype files, the candidate genomic regions can be obtained, but the accurate boundaries of the QTLs still cannot be obtained. In order to accurately obtain the boundary for each QTL, MODAS performs SNP-based regional association analysis using MLM on these candidate genomic regions, and uses plink clumping analysis to merge the linked (R 2 =0.2) significant SNPs, to determine the precise boundaries or each QTL. Finally, a QTL with more than 10 SNPs is regarded as a reliable QTL. Since the SNPs in a QTL region cannot accurately reflect the genetic relationship of inbred lines, a kinship matrix is also needed through the parameter -g . The command line is as follows: # identify QTLs with default parameters MODAS regiongwas -g ./chr_HAMP -phe ./E3_log2.sig_omics_phe.csv -phe_sig_qtl ./E3_log2.phe_sig_qtl.csv -o E3_log2 # identify QTLs with 20 threads, specifies by -p MODAS regiongwas -g ./chr_HAMP -phe ./E3_log2.sig_omics_phe.csv -phe_sig_qtl ./E3_log2.phe_sig_qtl.csv -p 20 -o E3_log2 # identify QTLs with p1 = 1e-7 and p2 = 1e-6 MODAS regiongwas -g ./chr_HAMP -phe ./E3_log2.sig_omics_phe.csv -phe_sig_qtl ./E3_log2.phe_sig_qtl.csv -p1 1e-7 -p2 1e-6 -p 20 -o E3_log2 The -phe_sig_qtl parameter specifies the candidate genomic regions file, the -phe parameter specifies the candidate traits file, the -g parameter specifies the SNP-based genotype file, the -p1 parameter specifies the significance threshold of index SNPs, the -p2 parameter specifies the secondary significance threshold for clumped SNPs. The regiongwas subcommand generates two files with the suffixes local_gwas_qtl_res.csv and local_gwas_bad_qtl_res.csv , which deposit reliable QTLs and unreliable QTLs, respectively. The cumulative distribution of significantly associated QTLs/metabolites after regional association analysis is looks like this:","title":"Perform regional association analysis on candidate genomic regions"},{"location":"tutorial/#cluster-the-molecular-traits","text":"In the results of regional association analysis, the QTLs identified by different traits were sometimes overlapped. Principal component analysis can be performed for the traits with overlapped QTLs, and the first principal component PC1 be used for GWAS analysis. As a result, the same QTL could be detected, which indicated that PC1 could replace the original multiple traits to reduce the amount of computing resource. In the process of regional association analysis in MODAS, the -cluster parameter can be added to cluster the traits according to the distance between QTL positions and further reduce the dimension of the molecular traits. In detail, the steps are as follows: First, when peak SNPs for two traits with a distance less than 2Mb, these traits are clustered. Second, principal component analysis is performed on the cluster and the correlation between the first principal component (PC1) and each trait are calculated. Third, when all traits have correlations greater than 0.6 with PC1 and the number of traits are greater than 2, these traits are clustered; whilst the remaining traits with correlations smaller than 0.6 are subjected to a new round a PCA; then, repeat the steps above until there is no trait remaining or no trait has a correlation greater than 0.6 with PC1, the remaining phenotypes are output separately. The -cluster parameter will generate two files with the suffixes phe_labeled.csv and clustered_phe.csv , which correspond to the cluster label of each traits and the reduced-dimensional traits, respectively.","title":"Cluster the molecular traits"},{"location":"tutorial/#perform-mendelian-randomization-analysis","text":"","title":"Perform Mendelian randomization analysis"},{"location":"tutorial/#mendelian-randomization-analysis","text":"Mendelian Randomization (MR) has been successfully applied in human genetics to explain the casual relations among genetic mutations, intermediate phenotypes (e.g., hypertension, hyperlipidemia) and diseases (e.g., stroke, myocardial infarction), rather than only associations. MODAS uses two models for Mendelian randomization analysis. In linear model, z represents the most significantly associated SNP of mTrait detected in RA analysis, x represents the expression level of a mTrait, and y represents the pTrait. Then, a two-step least-squares (2SLS) estimate of the effect of x on y from an MR analysis is: where b zy and b zx are the least-squares estimates of z on y and x, respectively, and b xy is interpreted as the effect size of x on y free of confounding from non-genetic factors. The sampling variance of the 2SLS estimate is: where n is the sample size, is the proportion of variance in y explained by x, and is the proportion of variance in x explained by z. In mixed linear model, z represents the most significantly associated SNP of mTrait detected in RA analysis, b zy is the estimate of the most significantly associated SNP effect from mixed linear model for pTrait, var(b zy ) is the estimate of the most significantly associated SNP standard error from mixed linear model for pTrait, b zx is the estimate of the most significantly associated SNP effect from mixed linear model for mTrait, var(b zx ) is the estimate of the most significantly associated SNP standard error from mixed linear model for mTrait, The sampling variance of bxy can be calculated approximately as: Then, we could have a statistic: to test the statistical significance of b xy , where The MR analysis in MODAS can be called by the subcommand mr , using either linear model (LM) or mixed linear model (MLM), with parameters -lm and -mlm , respectively. The command line is as follows: # lm model MODAS mr -g chr_HAMP -exposure AMP_kernel_transcriptome_v4_FPKM_correct.sig_eqtl.qqnorm.csv -outcome blup_traits_final.new.csv -qtl AMP_kernel_transcriptome_qtl_res.csv -lm -o AMP_kernel_transcriptome_MR_lm # mlm model MODAS mr -g chr_HAMP -exposure AMP_kernel_transcriptome_v4_FPKM_correct.sig_eqtl.qqnorm.csv -outcome blup_traits_final.new.csv -qtl AMP_kernel_transcriptome_qtl_res.csv -mlm -o AMP_kernel_transcriptome_MR_lm","title":"Mendelian Randomization analysis"},{"location":"tutorial/#mr-based-network-module-identification","text":"To construct the modularized casualty network based on the casual relations, MODAS selects the gene pairs with MR effects passing the significance threshold of p value = 0.01. The edge between two connecting genes is represented by a coefficient transformed from the significance level based on the rule: , represents the weight of genei and genej, represents the number of gene pairs whose MR effect is less than the MR effect of genei and genej, represents the number of gene pairs that simultaneously satisfy that the gene pair is colocalized and the MR effect is less than the MR effect of genei and genej. The gene pair colocalization is determined by whether the distance between the gene pair peak snp is less than 1Mb, less than 1Mb indicates that the gene pair is co-localized, otherwise, it is not co-localized. Then, a table of the gene-gene casualty is generated by filter edge with <0.2, followed by applying ClusterONE to construct a modularized casualty network. ClusterONE (Clustering with Overlapping Neighborhood Expansion) is a graph clustering algorithm that has been employed in generating overlapping clusters in constructing protein-protein interaction networks. This algorithm is also applicable to modularize a gene casualty network, as one gene may participate in more than one regulatory pathway. The positive and negative influence of a gene on a trait may be reflected from the positive and negative values of the MR effect, respectively, which is computed between gene expression level and the phenotypic value of a trait. The MR-based network module identification can be called by the subcommand mr with parameter -net . The command line is as follows: # network analysis MODAS mr -g chr_HAMP -exposure AMP_kernel_transcriptome_v4_eqtl_sig.csv -outcome AMP_kernel_transcriptome_v4_eqtl_sig.csv -qtl chr_HAMP_kernel_eqtl_new.local_gwas_qtl_res.csv -mlm -p 21 -net -o chr_HAMP_kernel_eqtl_new.local_gwas_qtl_res","title":"MR-based network module identification"},{"location":"tutorial/#whole-genome-wide-association-analysis-and-visualization","text":"Query and visualization of the regional association analysis results are not convenient, thus, a GWAS visualization module is implemented in MODAS. This module first performs GWAS and generate whole-genome level Manhattan plots for specified QTLs and traits, and then displays the results through a HTML based web page. The web page interface is divided into two areas: the left area is the navigation bar, and each label corresponds to a different QTL. Users can click on the drop-down button to list the traits of each QTL; the right area is the content page, and users can access the detailed information of each QTL or trait by clicking on the corresponding label in the left area. The GWAS visualization module in MODAS provides users with an efficient query scheme for a large number of GWAS results, it can be called by the subcommand -visual . The command line is as follows: # visualization MODAS visual -g chr_HAMP -phe E3_log2.normalized_phe.csv -qtl E3_log2.local_gwas_qtl_res.csv -p 6 -visual","title":"Whole genome-wide association analysis and visualization"},{"location":"tutorial/#identification-of-stress-responsive-molecular-qtls","text":"","title":"Identification of stress-responsive molecular QTLs"},{"location":"tutorial/#construction-of-stress-responsive-indices-by-contrastive-pca","text":"Identification of stress response molecular traits involves comparing the phenotypic values of molecular traits under stress and control conditions. However, the phenotypic values of molecular traits do not directly reflect the differences in stress response between alleles. Therefore, it is necessary to transform the phenotypic values of molecular traits to reflect the impact of alleles on molecular traits, thereby accurately identifying the stress response effects of molecular traits. One effective metric is the Bray-Curtis distance, which measures differences in species composition between different plots based on species abundance. By treating genotypes as \"species,\" Bray-Curtis distance can be used to transform molecular traits, allowing the assessment of the effect of alleles on molecular traits. For example, with the gene ZmRH3 , which is related to abiotic stress, we used Bray-Curtis distance to transform its expression levels (results shown in the figure below). We found that the transformed molecular traits not only reflected the effect of alleles on molecular traits but also revealed the differences in stress response between alleles. The transformed molecular traits form a distance matrix, and extracting differences from the matrices under stress and control conditions is quite challenging. This involves feature extraction from two matrices and comparison of the differences between features. Contrast PCA is a novel PCA algorithm that can simultaneously process two datasets and automatically extract the most significant differences between them. We used contrast PCA to perform comparison and dimensionality reduction on the transformed molecular traits of the gene ZmRH3 . The results showed that in inbred lines with a contrast PCA principal component greater than 0, there was a difference in ZmRH3 expression levels between control and stress conditions; in inbred lines with a principal component less than 0, there was no significant difference in ZmRH3 expression levels between control and stress conditions. This indicates that contrast PCA can be used to extract stress response effects of molecular traits. MODAS extracts the stress response effects of molecular traits using the contrast subcommand. This subcommand specifies the omics data under stress and control conditions through the parameters -stress_phe and -control_phe , respectively. It then extracts the stress response effects of molecular traits through Bray-Curtis transformation and the contrast PCA algorithm. The command line is as follows: MODAS contrast -stress_phe test_salt.rna.phe.csv -control_phe test_control.rna.phe.csv -beta_test_pvalue 1 -o test Since contrast PCA does not provide statistical significance testing to help screen out insignificant stress response effects, MODAS offers a statistical test method for screening contrast PCA results. The significance threshold is specified through -beta_test_pvalue . The command line including the statistical test screening is as follows: MODAS contrast -stress_phe test_salt.rna.phe.csv -control_phe test_control.rna.phe.csv -beta_test_pvalue 1e-6 -o test The above command will generate files with the suffixes .scpca_pc.phe.csv and .scpca_pc.beta_test.csv , which contain the stress response indices of molecular traits and the statistical test results of the stress response indices, respectively.","title":"Construction of stress-responsive indices by contrastive PCA"},{"location":"tutorial/#note","text":"It is worth noting that the contrast subcommand by default screens results using Bonferroni multiple hypothesis correction, with a threshold of 1/number of traits tested, and only the stress response effects that pass this threshold are considered as stress response indices.","title":"Note:"},{"location":"tutorial/#identifying-stress-responsive-molecular-qtls","text":"The stress response index reflects the effects of molecular traits under stress conditions. Performing GWAS on the stress response index can identify molecular QTLs associated with stress response, thereby elucidating the regulatory mechanisms of crop stress tolerance. However, the large number of stress response indices poses a significant computational burden for the identification of molecular QTLs. To address this, we use the MODAS subcommands prescreen and regiongwas to analyze the stress response indices in the process of identifying molecular QTLs related to stress response. For convenience in simultaneously constructing stress response indices and identifying molecular QTLs, the MODAS subcommand contrast integrates the functionalities of the prescreen and regiongwas subcommands. When using the contrast subcommand to identify molecular QTLs, the parameters -g and -genome_cluster are required to specify the genotype file and the pseudo-genotype file for pre-screening the stress response indices for GWAS analysis. To analyze the significance of stress response molecular QTLs, we also perform a two-way ANOVA on the identified molecular QTLs. The -anova_pvalue parameter is used to filter the stress-responsive molecular QTLs, yielding the final results. The default threshold for the -anova_pvalue parameter is 0.05. The command line for identifying stress response molecular QTLs is as follows: MODAS contrast -stress_phe test_salt.rna.phe.csv -control_phe test_control.rna.phe.csv -g chr.TEMs_clump -genome_cluster ./chr.TEMs_clump.genome_cluster.csv -gwas -p 10 -anova_pvalue 0.05 -o test The above command will generate files with the suffixes .scpca_pc.phe.csv , .scpca_pc.beta_test.csv , .region_gwas_qtl_res.anova.csv , and .region_gwas_qtl_res.anova.sig.csv , which contain the stress response indices of molecular traits, the statistical test results of the stress response indices, the QTL results of the stress response indices including the p-values from the two-way ANOVA, and the QTL results of the stress response indices with significant ANOVA result, respectively.","title":"Identifying stress-responsive molecular QTLs"},{"location":"tutorial/#qtl-co-localization-analysis-based-on-image-matching-algorithm","text":"QTL co-localization analysis is a method that integrates multiple phenotypic traits through natural variation, effectively merging various functional information to elucidate the genetic mechanisms of complex traits. However, relying solely on the overlap of QTL regions is insufficient to accurately determine QTL co-localization. The goal of co-localization is to ascertain whether QTLs share the same causal variation, which can be represented through a kinship matrix. To validate the use of kinship matrices in determining QTL co-localization, we analyzed the stress-responsive metabolite QTL of betaine (SRI1) and the stress-responsive expression QTL of its most relevant candidate gene, ZmGB1 . We found that the kinship matrices of both QTLs exhibited a consistent pattern, indicating that kinship matrices can be used to assess QTL co-localization. To accurately measure the similarity between two kinship matrices, we used an approximate image matching algorithm. To further evaluate the robustness of this method, we calculated the kinship matrix similarity between the stress-responsive metabolite QTL of betaine (SRI1) and 2666 stress-responsive expression QTLs using the approximate image matching algorithm. The results showed that ZmGB1 had the highest similarity with SRI1, demonstrating that the kinship matrix similarity measure based on the approximate image matching algorithm can be used for QTL co-localization analysis. MODAS performs QTL co-localization analysis based on the approximate image matching algorithm through the subcommand coloc . The command line is as follows: MODAS coloc -qtl multi_omics.bc_cspca_res.new.beta_test.sig.region_gwas_qtl_res.anova_sig.csv -g chr.TEMs_clump -gwas_dir gwas_test_new/ -p 8 -o test The parameter -qtl specifies the QTL file used for co-localization analysis, and -gwas_dir is used to specify the directory containing the association analysis results for each molecular trait. It is recommended to use the association analysis results generated by the MODAS subcommand regiongwas . The parameter -g specifies the genotype data used to calculate kinship, and -p specifies the threads used for co-localization analysis. The above command will generate files with the suffixes .coloc_res.csv , .coloc_pairwise.csv , and .dis_res.csv , which contain the results of the co-localized QTL clusters, the pairwise QTL co-localization results, and the similarity results between pairwise QTLs, respectively. \\(R_{xy}^2\\) \\(R_{zx}^2\\) \\(weight_{(i,j)}\\) \\(co-mapped{\\,}MR{\\,}gene{\\,}pair{\\,}count_{(P<P_{(i,j)})}\\) \\(MR{\\,}gene{\\,}pair{\\,}count_{(P<P_{(i,j)})}\\) \\(weight_{(i,j)}=\\frac {co-mapped{\\,}MR{\\,}gene{\\,}pair{\\,}count_{(P<P_{(i,j)})}}{MR{\\,}gene{\\,}pair{\\,}count_{(P<P_{(i,j)})}}\\)","title":"QTL co-localization analysis based on image matching algorithm"},{"location":"visual_example/","text":"","title":"Visual_example"}]}